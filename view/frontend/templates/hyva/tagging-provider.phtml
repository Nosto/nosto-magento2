<?php
/**
 * Copyright (c) 2020, Nosto Solutions Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author Nosto Solutions Ltd <contact@nosto.com>
 * @copyright 2020 Nosto Solutions Ltd
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 *
 */

/** @var \Nosto\Tagging\Block\TaggingProvider $block */
$taggingConfig = $block->getTaggingConfig();
?>

<?php if ($block->isNostoEnabled()): ?>
<!-- Hyva Theme with Alpine.js -->
<script>
    // Store configuration globally
    window.nostoTaggingConfig = <?= json_encode($taggingConfig) ?>;

    // Initialize tagging providers when the DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Nosto tagging providers
        function initNostoTaggingProviders() {
            // Wait for nostojs to be available
            function waitForNostoJs(callback, maxAttempts = 50, interval = 100) {
                let attempts = 0;

                const checkNostoJs = setInterval(function() {
                    attempts++;

                    if (typeof nostojs === 'function') {
                        clearInterval(checkNostoJs);
                        callback();
                        return;
                    }

                    if (attempts >= maxAttempts) {
                        clearInterval(checkNostoJs);
                        console.log('Failed to load nostojs after ' + maxAttempts + ' attempts');
                    }
                }, interval);
            }

            // Setup tagging providers
            function setupTaggingProviders() {
                var config = window.nostoTaggingConfig || {};

                nostojs(function (api) {
                    // Page Type Provider
                    api.internal.setTaggingProvider("pageType", function () {
                        return config.pageType;
                    });

                    // Products Provider
                    if (config.products) {
                        api.internal.setTaggingProvider("products", function () {
                            return config.products;
                        });
                    }

                    // Cart Provider
                    if (config.cart) {
                        api.internal.setTaggingProvider("cart", function () {
                            return config.cart;
                        });
                    }

                    // Customer Provider
                    if (config.customer) {
                        api.internal.setTaggingProvider("customer", function () {
                            return config.customer;
                        });
                    }

                    // Categories Provider
                    if (config.categories) {
                        api.internal.setTaggingProvider("categories", function () {
                            return config.categories;
                        });
                    }

                    // Variation Provider
                    if (config.variation) {
                        api.internal.setTaggingProvider("variation", function () {
                            return config.variation;
                        });
                    }

                    // Search Term Provider
                    if (config.searchTerm) {
                        api.internal.setTaggingProvider("searchTerm", function () {
                            return config.searchTerm;
                        });
                    }
                });
            }
            waitForNostoJs(setupTaggingProviders);
        }

        // Initialize tagging providers
        initNostoTaggingProviders();
    });
</script>
<?php endif; ?>