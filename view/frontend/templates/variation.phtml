<?php
/**
 * Copyright (c) 2020, Nosto Solutions Ltd
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author Nosto Solutions Ltd <contact@nosto.com>
 * @copyright 2020 Nosto Solutions Ltd
 * @license http://opensource.org/licenses/BSD-3-Clause BSD 3-Clause
 *
 */

/**
 *     ______     ___     ____  _____  ___   _________   ________ ______  _____ _________
 *    |_   _ `. .'   `.  |_   \|_   _.'   `.|  _   _  | |_   __  |_   _ `|_   _|  _   _  |
 *      | | `. /  .-.  \   |   \ | |/  .-.  |_/ | | \_|   | |_ \_| | | `. \| | |_/ | | \_|
 *      | |  | | |   | |   | |\ \| || |   | |   | |       |  _| _  | |  | || |     | |
 *     _| |_.' \  `-'  /  _| |_\   |\  `-'  /  _| |_     _| |__/ |_| |_.' _| |_   _| |_
 *    |______.' `.___.'  |_____|\____`.___.'  |_____|   |________|______.|_____| |_____|
 *
 * Nosto sends information over both the API and the browser tagging. Values for the tagging is generated
 * via the Nosto corresponding objects. In order to customize the values in the markup below, you will need
 * to override the core parts of the extension. Failure to do so will result in broken and incorrect
 * recommendations.
 * Please see a reference guide such as https://github.com/Nosto/nosto-magento2/wiki
 *
 * @var Nosto\Tagging\Block\Variation $block
 */

$isHyva = $block->isHyva();
$variationId = $block->getVariationId();
?>

<!-- Nosto Variation Tagging -->
<?php if ($isHyva): ?>

  <?php if (!empty($block->getAbstractObject())): {
      // Skip rendering if multiple currencies are not used or if pricing variation is not enabled
      return;
  } else:
  ?>
  <div id="nosto_variation_tagging" style="display:none">
    <!-- Static variation span, will be replaced with dynamic one if necessary -->
    <span class="nosto_variation"><?= $block->escapeHtml($variationId) ?></span>
  </div>
  <script>
      document.addEventListener('DOMContentLoaded', function() {
          function initNostoVariationTagging() {
              const defaultVariation = '<?= $block->escapeJs($variationId) ?>';
              function processVariationData(data) {
                  if (!data || !data['active-variation-tagging']) return;
                  const tagging = data['active-variation-tagging'];
                  if (tagging && tagging.active_variation) {
                      reloadRecommendations(tagging.active_variation);
                  }
              }
              function reloadRecommendations(activeVariation) {
                  const staticElement = document.querySelector(".nosto_variation:not(.nosto_variation_dynamic)");
                  if (staticElement) {
                      staticElement.classList.remove('nosto_variation');
                      staticElement.classList.add('nosto_variation_static');
                  }

                  let dynamicElement = document.querySelector(".nosto_variation_dynamic");
                  if (!dynamicElement) {
                      dynamicElement = document.createElement('span');
                      dynamicElement.className = 'nosto_variation_dynamic';
                      document.getElementById('nosto_variation_tagging').appendChild(dynamicElement);
                  }

                  dynamicElement.classList.add("nosto_variation");
                  dynamicElement.textContent = activeVariation;
                  if (typeof nostojs === 'function') {
                      nostojs(api => {
                          api.loadRecommendations();
                      });
                  }
              }

              window.addEventListener('private-content-loaded', (event) => {
                  if (event.detail && event.detail.data) {
                      processVariationData(event.detail.data);
                  }
              });

              if (typeof Alpine !== 'undefined' &&
                  typeof Alpine.store === 'function' &&
                  Alpine.store('customer') &&
                  Alpine.store('customer').variationData) {
                  processVariationData(Alpine.store('customer'));
              }
          }
          initNostoVariationTagging();
      });
  </script>
  <?php endif; ?>
<?php else: ?>
  <!-- Luma with Knockout.js -->
  <div id="nosto_variation_tagging" style="display:none"
       data-bind="scope: 'variationTagging'"
       data-role="nosto-variation-tagging"
  >
    <!-- ko if: variationTagging().active_variation -->
    <span class="nosto_variation_dynamic" data-bind="text: variationTagging().active_variation, afterRender: reloadRecommendations"></span>
    <!-- /ko -->
    <!-- ko ifnot: variationTagging().active_variation -->
    <span class="nosto_variation"><?= $block->escapeHtml($variationId) ?></span>
    <!-- /ko -->
  </div>

  <script type="text/x-magento-init">
    {
      "[data-role=nosto-variation-tagging]": {
        "Magento_Ui/js/core/app": <?= $block->getJsLayout(); ?>
    }
  }
  </script>
<?php endif; ?>
